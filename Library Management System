#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_BOOKS 100

typedef struct {
    int id;
    char title[100];
    char author[100];
} Book;

void addBook(Book books[], int *count) {
    if (*count >= MAX_BOOKS) {
        printf("Library is full. Cannot add more books.\n");
        return;
    }

    Book newBook;
    newBook.id = *count + 1; // Simple ID assignment strategy
    printf("Enter book title: ");
    scanf(" %[^\n]%*c", newBook.title); // Read string with spaces
    printf("Enter author name: ");
    scanf(" %[^\n]%*c", newBook.author);

    books[*count] = newBook;
    (*count)++;
    printf("Book added successfully!\n");
}

void deleteBook(Book books[], int *count, int id) {
    int index = -1;
    for (int i = 0; i < *count; i++) {
        if (books[i].id == id) {
            index = i;
            break;
        }
    }

    if (index == -1) {
        printf("No book found with ID %d.\n", id);
        return;
    }

    for (int i = index; i < *count - 1; i++) {
        books[i] = books[i + 1];
    }
    (*count)--;
    printf("Book deleted successfully!\n");
}

void searchBook(Book books[], int count, const char *title) {
    int found = 0;
    for (int i = 0; i < count; i++) {
        if (strstr(books[i].title, title) != NULL) {
            printf("ID: %d, Title: %s, Author: %s\n", books[i].id, books[i].title, books[i].author);
            found = 1;
        }
    }
    if (!found) {
        printf("No books found with title containing \"%s\".\n", title);
    }
}

void listBooks(Book books[], int count) {
    if (count == 0) {
        printf("No books available.\n");
        return;
    }
    for (int i = 0; i < count; i++) {
        printf("ID: %d, Title: %s, Author: %s\n", books[i].id, books[i].title, books[i].author);
    }
}

int main() {
    Book books[MAX_BOOKS];
    int count = 0;
    int choice, id;
    char title[100];

    while (1) {
        printf("\nLibrary Management System\n");
        printf("1. Add Book\n");
        printf("2. Delete Book\n");
        printf("3. Search Book by Title\n");
        printf("4. List All Books\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // Consume newline character left by scanf

        switch (choice) {
            case 1:
                addBook(books, &count);
                break;
            case 2:
                printf("Enter book ID to delete: ");
                scanf("%d", &id);
                deleteBook(books, &count, id);
                break;
            case 3:
                printf("Enter book title to search: ");
                scanf(" %[^\n]%*c", title);
                searchBook(books, count, title);
                break;
            case 4:
                listBooks(books, count);
                break;
            case 5:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice. Please select 1-5.\n");
                break;
        }
    }

    return 0;
}
